{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\first-chapter\\\\src\\\\Components\\\\Login.js\";\nimport React, { Component } from 'react';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    }; // handle initialization activities\n  }\n\n  handleChangeEvents(e) {\n    //handle change events\n    console.log(\"handleChangeEvents => \");\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmitevents(e) {\n    // handle submit events\n    console.log(\"handleSubmitevents => \");\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \" TestLoginForm \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmitevents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }\n    }, \"User Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-test\": \"username\",\n      value: this.state.username,\n      onChange: e => this.handleChangeEvents(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      \"data-test\": \"password\",\n      value: this.state.password,\n      onChange: e => this.handleChangeEvents(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Log In\",\n      \"data-test\": \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/reactjs/first-chapter/src/Components/Login.js"],"names":["React","Component","Login","constructor","props","state","username","password","formErrors","email","emailValid","passwordValid","formValid","handleChangeEvents","e","console","log","name","target","value","setState","handleSubmitevents","validateField","fieldName","fieldValidationErrors","match","length","validateForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Login extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {\r\n    username : '',\r\n    password : '',\r\n    formErrors: {email: '', password: ''},\r\n    emailValid: false,\r\n    passwordValid: false,\r\n    formValid: false\r\n}\r\n// handle initialization activities\r\n}\r\nhandleChangeEvents(e) {\r\n//handle change events\r\nconsole.log(\"handleChangeEvents => \");\r\nconst name = e.target.name;\r\n  const value = e.target.value;\r\n  this.setState({[name]: value});\r\n}\r\nhandleSubmitevents(e) {\r\n// handle submit events\r\nconsole.log(\"handleSubmitevents => \");\r\n}\r\n\r\n\r\n\r\nvalidateField(fieldName, value) {\r\n  let fieldValidationErrors = this.state.formErrors;\r\n  let emailValid = this.state.emailValid;\r\n  let passwordValid = this.state.passwordValid;\r\nswitch(fieldName) {\r\n    case 'email':\r\n      emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n      fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n      break;\r\n    case 'password':\r\n      passwordValid = value.length >= 6;\r\n      fieldValidationErrors.password = passwordValid ? '': ' is too short';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  this.setState({formErrors: fieldValidationErrors,\r\n                  emailValid: emailValid,\r\n                  passwordValid: passwordValid\r\n                }, this.validateForm);\r\n}\r\nvalidateForm() {\r\n  this.setState({formValid: this.state.emailValid &&\r\n                            this.state.passwordValid});\r\n}\r\nrender() {\r\nreturn (\r\n<div className=\" TestLoginForm \">\r\n<form onSubmit={this.handleSubmitevents}>\r\n{\r\n//handle error condition\r\n}\r\n<label>User Name</label>\r\n<input type=\"text\" data-test=\"username\" value={this.state.username} onChange={(e) => this.handleChangeEvents(e)} />\r\n<label>Password</label>\r\n<input type=\"password\" data-test=\"password\" value={this.state.password} onChange={(e) => this.handleChangeEvents(e) } />\r\n<input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n</form>\r\n</div>\r\n);\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}